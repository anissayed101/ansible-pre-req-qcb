- name: Load port variables
  include_vars:
    file: "{{ role_path }}/vars/ports.json"
    name: port_data

- name: Debug Loaded Ports Data
  debug:
    var: port_data

- name: Remove and Recreate Output Directory
  file:
    path: /tmp/ansible_pre_req_check
    state: absent

- name: Create Output Directory
  file:
    path: /tmp/ansible_pre_req_check
    state: directory

- name: Remove existing output file if it exists
  file:
    path: /tmp/ansible_pre_req_check/ports_check.csv
    state: absent

- name: Create new output file and add headers
  copy:
    dest: /tmp/ansible_pre_req_check/ports_check.csv
    content: "source_hostname,destination_hostname,port,connection_status,service,daemon,comment,test_type\n"

- name: Initialize port check results
  set_fact:
    port_check_results: []

- name: Perform port connectivity check
  block:
    - name: Loop through hosts and check ports
      shell: "nc -zvw3 {{ test_case.0 }} {{ test_case.1 }}"
      register: port_check
      failed_when: false
      loop: "{{ groups['all'] | product(port_data.keys() | list) | list }}"
      loop_control:
        loop_var: test_case
      when: inventory_hostname != test_case.0

    - name: Debug Port Check Output
      debug:
        msg: "Checking connectivity from {{ test_case.0 }} to port {{ test_case.1 }}: {{ 'CONNECTED' if port_check is defined and port_check.rc is defined and port_check.rc == 0 else 'FAILED' }}"
      loop: "{{ groups['all'] | product(port_data.keys() | list) | list }}"
      loop_control:
        loop_var: test_case
      when: inventory_hostname != test_case.0

    - name: Store port check results
      set_fact:
        port_check_results: "{{ port_check_results + [[ inventory_hostname, test_case.0, test_case.1, ('CONNECTED' if port_check is defined and port_check.rc is defined and port_check.rc == 0 else 'FAILED'), port_data[test_case.1]['Service'], port_data[test_case.1]['Daemon'], port_data[test_case.1]['Comment'], 'Port_Connectivity_Test' ]] }}"
      loop: "{{ groups['all'] | product(port_data.keys() | list) | list }}"
      loop_control:
        loop_var: test_case
      when: inventory_hostname != test_case.0

- name: Ensure port check results are not empty
  set_fact:
    port_check_results: "{{ port_check_results | default([['NO_DATA', 'NO_DATA', 'NO_DATA', 'NO_DATA', 'NO_DATA', 'NO_DATA', 'NO_DATA', 'NO_DATA']]) }}"

- name: Debug Port Check Results Before Writing to CSV
  debug:
    msg: "{{ port_check_results }}"

- name: Write port check results to CSV
  lineinfile:
    path: /tmp/ansible_pre_req_check/ports_check.csv
    line: "{{ item | join(',') }}"
    create: yes
  loop: "{{ port_check_results }}"
  delegate_to: localhost
  run_once: false

- name: Display the CSV Output in GitHub Actions
  command: cat /tmp/ansible_pre_req_check/ports_check.csv
  register: csv_output
  changed_when: false

- name: Show CSV Output in GitHub Actions
  debug:
    msg: "{{ csv_output.stdout_lines }}"
